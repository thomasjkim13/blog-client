{"ast":null,"code":"var _jsxFileName = \"/Users/thomaskim/Desktop/sei/projects/capstone_project/blog-client/src/components/PostShow/PostShow.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./postshow.css\";\nimport { Context } from \"../../context/Context\";\nimport { useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PostShow() {\n  _s();\n\n  const location = useLocation();\n  const path = location.pathname.split(\"/\")[2];\n  const [post, setPost] = useState({});\n  const Folder = \"http://localhost:5000/images/\";\n  const {\n    user\n  } = useContext(Context);\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [update, setUpdate] = useState(false);\n  useEffect(() => {\n    const getPost = async () => {\n      const res = await axios.get(\"/posts/\" + path);\n      setPost(res.data);\n      setTitle(res.data.title);\n      setDesc(res.data.desc);\n    };\n\n    getPost();\n  }, [path]);\n\n  const handleDelete = async () => {\n    try {\n      await axios.delete(`/posts/${post._id}`, {\n        data: {\n          username: user.username\n        }\n      });\n      window.location.replace(\"/\");\n    } catch (err) {}\n  };\n\n  const handleUpdate = async () => {\n    try {\n      await axios.put(`/posts/${post._id}`, {\n        username: user.username,\n        title,\n        desc\n      });\n      setUpdate(false);\n    } catch (err) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"postShow\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"postShowWrapper\",\n      children: [post.photo && /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"postShowImg\",\n        src: Folder + post.photo,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), update ? /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        className: \"postShowTitleInput\",\n        autoFocus: true,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"postShowTitle\",\n        children: [title, post.username === user.username && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"postShowEdit\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"postShowIcon far fa-edit\",\n            onClick: () => setUpdate(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"postShowIcon far fa-trash-alt\",\n            onClick: handleDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postShowInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"postShowAuthor\",\n          children: [\"Author :\", /*#__PURE__*/_jsxDEV(Link, {\n            to: `/?user=${post.username}`,\n            className: \"link\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: post.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 14\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"postShowDate\",\n          children: new Date(post.createdAt).toDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), update ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"postShowDescInput\",\n        value: desc,\n        onChange: e => setDesc(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"postShowDesc\",\n        children: desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), update && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"postShowButton\",\n        onClick: handleUpdate,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PostShow, \"1IOjJmDyHlae3Ti8+uy+MYY1Hl8=\", false, function () {\n  return [useLocation];\n});\n\n_c = PostShow;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostShow\");","map":{"version":3,"sources":["/Users/thomaskim/Desktop/sei/projects/capstone_project/blog-client/src/components/PostShow/PostShow.jsx"],"names":["useEffect","useState","useLocation","Link","axios","Context","useContext","PostShow","location","path","pathname","split","post","setPost","Folder","user","title","setTitle","desc","setDesc","update","setUpdate","getPost","res","get","data","handleDelete","delete","_id","username","window","replace","err","handleUpdate","put","photo","e","target","value","Date","createdAt","toDateString"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\"\nimport { useLocation } from \"react-router\"\nimport { Link } from \"react-router-dom\"\nimport axios from \"axios\"\nimport \"./postshow.css\"\nimport { Context } from \"../../context/Context\"\nimport { useContext } from \"react\"\n\nexport default function PostShow() {\n  const location = useLocation()\n  const path = location.pathname.split(\"/\")[2]\n  const [post, setPost] = useState({})\n  const Folder = \"http://localhost:5000/images/\"\n  const {user} = useContext(Context)\n  const [title, setTitle] = useState(\"\")\n  const [desc, setDesc] = useState(\"\")\n  const [update, setUpdate] = useState(false)\n\n  useEffect(() => {\n    const getPost = async () => {\n      const res = await axios.get(\"/posts/\" + path)\n      setPost(res.data)\n      setTitle(res.data.title)\n      setDesc(res.data.desc)\n    }\n    getPost()\n  }, [path])\n  \n  const handleDelete = async () => {\n    try {\n      await axios.delete(`/posts/${post._id}`, { data: { username:user.username },})\n      window.location.replace(\"/\")\n    } catch (err) {}\n  }\n\n  const handleUpdate = async () => {\n    try {\n      await axios.put(`/posts/${post._id}`, { \n        username:user.username, \n        title, \n        desc \n      })\n      setUpdate(false)\n    } catch (err) {}\n  }\n\n  return (\n    <div className=\"postShow\">\n      <div className=\"postShowWrapper\">\n        {post.photo && (\n          <img className=\"postShowImg\" \n          src={Folder + post.photo}\n          alt=\"\" />\n        )}{\n          update ? (\n            <input \n            type=\"text\" \n            value={title} \n            className=\"postShowTitleInput\" \n            autoFocus \n            onChange={(e) => setTitle(e.target.value)}\n            /> \n            ) : (\n            <h1 className=\"postShowTitle\">\n              {title}\n              {post.username === user.username && (\n                <div className=\"postShowEdit\">\n                  <i className=\"postShowIcon far fa-edit\" onClick={() => setUpdate(true)}></i>\n                  <i className=\"postShowIcon far fa-trash-alt\" onClick={handleDelete}></i>\n                </div>\n              )}\n            </h1>\n          )\n        }\n        <div className=\"postShowInfo\">\n          <span className=\"postShowAuthor\">Author : \n          <Link to ={`/?user=${post.username}`} className=\"link\">\n             <b>{post.username}</b>\n          </Link>\n          </span>\n          <span className=\"postShowDate\">{new Date(post.createdAt).toDateString()}</span>\n        </div>\n        {update ? (\n          <textarea className=\"postShowDescInput\" value={desc} onChange={(e) => setDesc(e.target.value)} />\n        ) : (\n          <p className=\"postShowDesc\">{desc}</p>\n        )}\n        {update && (\n        <button className=\"postShowButton\" onClick={handleUpdate}>Update</button>\n        )}\n      </div>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}